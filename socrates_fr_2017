! Functionnal Programming : 

!! What is it ?
 - Programming with fuction
 - Lambda calculus
 - != language fonctionnel
 - Way of thinkning
 - Paradygme de programmation
 
!! Fonction
 - Déclaration : f(x)
 - Application : f(2)
 - Substitution : f(2) = 3 (memoization)
 - Function = ensemble de départ (domain) -> ensemble d'arrivé (co-domain)

!! Conception fonctionnelle
 - Coeur fonctionnel (pure)
 - à l'exterieur du coeur : les effets de bords
 - on va tendre vers cette architecture car on va essayer d'avoir le plus possible des fonctions "pure"
 
!! Types de fonctions 
 - Total vs partiel
 - Total => renvoie un résultat
 - Partiel => renvoie une fonction
 - lambda = 
 - Functor = Type mapping between categories
 - Predicate = a function that is evalued to true or false
 - closure = fonction avec des variables non local (pas défini à l'intérieur)
 
!! Opérations sur les fonctions
 - composition de fonction f(g(x)) => g o f = h

!! Monads, ...
 - todo :'(

!! Tips to begin
 - https://maryrosecook.com/blog/post/a-practical-introduction-to-functional-programming
 - 
